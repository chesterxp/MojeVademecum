'use strict';

var updateNews = function () {
    var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
        var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultSource;
        var res, json;
        return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.next = 2;
                        return fetch('https://newsapi.org/v2/top-headlines?sources=' + source + '&apiKey=a5d2366b77a64988a0760c5907de2488');

                    case 2:
                        res = _context2.sent;
                        _context2.next = 5;
                        return res.json();

                    case 5:
                        json = _context2.sent;

                        main.innerHTML = json.articles.map(creatArticle).join('\n');

                    case 7:
                    case 'end':
                        return _context2.stop();
                }
            }
        }, _callee2, this);
    }));

    return function updateNews() {
        return _ref2.apply(this, arguments);
    };
}();

var updateSources = function () {
    var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
        var res, json;
        return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        _context3.next = 2;
                        return fetch('https://newsapi.org/v2/sources?apiKey=a5d2366b77a64988a0760c5907de2488');

                    case 2:
                        res = _context3.sent;
                        _context3.next = 5;
                        return res.json();

                    case 5:
                        json = _context3.sent;

                        sourceSelector.innerHTML = json.sources.map(createOption).join('\n');

                    case 7:
                    case 'end':
                        return _context3.stop();
                }
            }
        }, _callee3, this);
    }));

    return function updateSources() {
        return _ref3.apply(this, arguments);
    };
}();

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

var apiKey = '6f4fa5447bb24a2687edecc4c1df43b4';
var main = document.querySelector('main');
var sourceSelector = document.querySelector('#sourceSelector');
var defaultSource = "national-geographic";

window.addEventListener('load', function () {
    var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(e) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        updateNews();
                        _context.next = 3;
                        return updateSources();

                    case 3:
                        sourceSelector.value = defaultSource;
                        sourceSelector.addEventListener('change', changeNews);

                    case 5:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function (_x) {
        return _ref.apply(this, arguments);
    };
}());

function changeNews() {
    console.log(sourceSelector.value);
    updateNews(sourceSelector.value);
}

function creatArticle(article) {
    return '\n    <div class="article">\n      <a href="' + article.url + '">\n        <h2>' + article.title + '</h2>\n        <img src="' + article.urlToImage + '" alt="' + article.title + '">\n        <p>' + article.description + '</p>\n      </a>\n    </div>\n    ';
}

function createOption(src) {
    return '<option value="' + src.id + '">' + src.name + '</options>';
}